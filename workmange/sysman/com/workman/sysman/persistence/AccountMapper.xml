<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.workman.sysman.persistence.AccountMapper">

	<cache />
	<select id="getCount" resultType="int" parameterType="com.workman.sysman.persistence.wrapper.AccountWrapper">
		SELECT COUNT(ID) FROM ACCOUNT 
		WHERE 1=1 AND ID != #{currId}
		<if test="name != null">
			AND NAME LIKE #{name}
		</if>
		<if test="authLevel>0">
			AND AUTH_LEVEL = #{authLevel}
		</if>
		<if test="depCode>0">
			AND DEPARTMENT_CODE = #{depCode}
		</if>
	</select>
	<resultMap type="com.workman.sysman.model.AccountModel" id="accountMap">
		<id column="id" property="id"/>
		<result column="username" property="userName" />
		<result column="password" property="password" />
		<result column="name" property="name" />
		<result column="phone" property="phone" />
		<result column="weibo" property="weibo" />
		<association property="auth" column="auth_level"
			javaType="com.workman.sysman.model.AuthModel">
			<result property="level" column="a_level" />
			<result property="name" column="a_name" />
		</association>
		<association property="department" column="department_code"
			javaType="com.workman.sysman.model.DepartmentModel">
			<result property="code" column="d_code" />
			<result property="name" column="d_name" />
		</association>
	</resultMap>
	<select id="getAccountInfo" parameterType="int" resultMap="accountMap">
		SELECT
		AC.ID,
		AC.NAME,
		AC.USERNAME,
		AC.PASSWORD,
		AC.PHONE,
		AC.WEIBO,
		AU.LEVEL AS a_level,
		AU.NAME AS a_name,
		DE.CODE AS d_code,
		DE.NAME AS d_name 
		FROM ACCOUNT AC LEFT JOIN AUTH AU ON AC.AUTH_LEVEL = AU.LEVEL 
		LEFT JOIN DEPARTMENT DE ON AC.DEPARTMENT_CODE = DE.CODE 
		WHERE ID = #{id}
	</select>
	<select id="getList"  resultMap="accountMap"
		parameterType="com.workman.sysman.persistence.wrapper.AccountWrapper">
		SELECT
		AC.ID,
		AC.NAME,
		AC.USERNAME,
		AC.PASSWORD,
		AC.PHONE,
		AC.WEIBO,
		AU.LEVEL AS a_level,
		AU.NAME AS a_name,
		DE.CODE AS d_code,
		DE.NAME AS d_name
		FROM ACCOUNT AC LEFT JOIN AUTH AU ON AC.AUTH_LEVEL=AU.LEVEL  
		LEFT JOIN DEPARTMENT DE ON DE.CODE=AC.DEPARTMENT_CODE
		WHERE  AC.ID != #{currId}
		<if test="name != null">
			AND AC.NAME LIKE #{name}
		</if>
		<if test="authLevel>0">
			AND AC.AUTH_LEVEL = #{authLevel}
		</if>
		<if test="depCode>0">
			AND AC.DEPARTMENT_CODE = #{depCode}
		</if>
		LIMIT #{start},#{end}
		
	</select>
	<select id="getAccountByUserName" parameterType="string" resultMap="accountMap">
		SELECT
		AC.ID,
		AC.NAME,
		AC.USERNAME,
		AC.PASSWORD,
		AC.PHONE,
		AC.WEIBO,
		AU.LEVEL AS a_level,
		AU.NAME AS a_name,
		DE.CODE AS d_code,
		DE.NAME AS d_name
		FROM ACCOUNT AC LEFT JOIN AUTH AU ON AC.AUTH_LEVEL = AU.LEVEL 
		LEFT JOIN DEPARTMENT DE ON AC.DEPARTMENT_CODE = DE.CODE 
		WHERE AC.USERNAME = #{name}
	</select>
	<select id="getAccount" parameterType="int" resultMap="accountMap">
		SELECT
		AC.ID,
		AC.NAME,
		AC.USERNAME,
		AC.PASSWORD,
		AC.PHONE,
		AC.WEIBO,
		AU.LEVEL AS a_level,
		AU.NAME AS a_name,
		DE.CODE AS d_code,
		DE.NAME AS d_name
		FROM ACCOUNT AC LEFT JOIN AUTH AU ON AC.AUTH_LEVEL = AU.LEVEL 
		LEFT JOIN DEPARTMENT DE ON AC.DEPARTMENT_CODE = DE.CODE 
		WHERE AC.ID = #{id}
	</select>
	<insert id="insert" parameterType="com.workman.sysman.model.AccountModel">
		INSERT INTO ACCOUNT
		(USERNAME,NAME, PASSWORD,AUTH_LEVEL,DEPARTMENT_CODE,PHONE,WEIBO)VALUES(
		#{userName},#{name},#{password},#{auth.level},#{department.code},#{phone},#{weibo}
		)
	</insert>
	<update id="update" parameterType="com.workman.sysman.model.AuthModel">
		UPDATE ACCOUNT SET
		NAME = #{name},
		PHONE = #{phone},
		WEIBO = #{weibo},
		PASSWORD = #{password},
		AUTH_LEVEL = #{auth.level},
		DEPARTMENT_CODE = #{department.code}
		WHERE ID = #{id}
	</update>
	<update id="updateInfo" parameterType="map">
		UPDATE ACCOUNT SET
		<if test="name != null">
			NAME = #{name},
		</if>
		<if test="phone != null">
			PHONE = #{phone},
		</if>
		WEIBO = #{weibo},
		DEPARTMENT_CODE = #{depCode}
		WHERE ID = #{currId}
	</update>
	<update id="updatePwd" parameterType="map">
		UPDATE ACCOUNT SET PASSWORD=#{password}
		WHERE ID=#{id}
	</update>
	<delete id="delete" parameterType="int">
		DELETE FROM ACCOUNT WHERE ID=#{id}
	</delete>
</mapper>